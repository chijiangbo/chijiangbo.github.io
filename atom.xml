<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>路上</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-20T15:07:23.407Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>池江波</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>三栏式布局中float:right不起作用</title>
    <link href="http://yoursite.com/2017/02/20/%E4%B8%89%E6%A0%8F%E5%BC%8F%E5%B8%83%E5%B1%80%E4%B8%ADfloat-right%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/"/>
    <id>http://yoursite.com/2017/02/20/三栏式布局中float-right不起作用/</id>
    <published>2017-02-20T14:54:30.000Z</published>
    <updated>2017-02-20T15:07:23.407Z</updated>
    
    <content type="html"><![CDATA[<p>深层次理解float</p>
<a id="more"></a>
<p>两边定宽，中间自适应的样子</p>
<p>html</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset=&quot;UTF-8&quot;&gt;
        &lt;title&gt;&lt;/title&gt;
        &lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;new_file.css&quot;/&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div id=&quot;wrap&quot;&gt;
            &lt;div id=&quot;left&quot;&gt;
                &lt;img src=&quot;10361578_222507517000_2.jpg&quot; /&gt;
                &lt;p&gt;Poi$on&lt;/p&gt;
            &lt;/div&gt;
            &lt;div id=&quot;main&quot;&gt;
                美国街头品牌 SSUR 人气支线 SSUR*PLUS 日前释出了春夏系列，以 “Mischief &amp; American Dream” 为主题，大玩恶搞风格和美式精神，将“I DON`T GIVE A F*CK”、“RICH OWNERS”、“自由国”、“美国鹰”等标语和图案印制于 Tee、背心、短裤之上，并大胆运用条纹、迷彩、拼接等设计元素，极具街头态度。据悉，所有新品将于近期上架 SSUR 上海门店和线上店铺，感兴趣的朋友不妨提前做好准备。
            &lt;/div&gt;
            &lt;div id=&quot;right&quot;&gt;
                &lt;img src=&quot;10361578_222507517000_2.jpg&quot; /&gt;
                &lt;img src=&quot;10361578_222507517000_2.jpg&quot; /&gt;
                &lt;img src=&quot;10361578_222507517000_2.jpg&quot; /&gt;
                &lt;img src=&quot;10361578_222507517000_2.jpg&quot; /&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre><p>css</p>
<pre><code>*{
padding: 0;
margin: 0;
box-sizing: border-box;
}
body{
    padding: 20px;
}
#wrap,#left,#right,#main{
    border: 1px solid #999;
    padding: 20px;
}
#wrap{
    overflow: auto;
    background: #eee;
    min-width: 600px;
    margin: 0 auto;
}
#left{
    float: left;
    width: 200px;
    background: #fff;
}
#right{
    float: right;
    width: 120px;
    background: #fff;
}
#main{
    margin-left: 220px;
    margin-right: 140px ;
    background: #fff;
}
</code></pre><p>其中，#right的float：right不起作用，这是为什么呢？</p>
<blockquote>
<p>浏览器解析HTML文档是从上到下按顺序解析的，所以原来的代码right本来就是一个block，设置右浮动不会对它前面的main有影响。</p>
</blockquote>
<p>解决方法</p>
<blockquote>
<p>在html中，把main和right换个顺序就行了，这样#right的float:right会影响main的布局。</p>
</blockquote>
<p>其实发现跟三栏定宽布局原理一样，我们给前两列设置了float后，第三列就自动在后面，因为前两个float影响了第三列的布局。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;深层次理解float&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>vertical-align属性</title>
    <link href="http://yoursite.com/2017/02/20/vertical-align%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2017/02/20/vertical-align属性/</id>
    <published>2017-02-20T13:23:26.000Z</published>
    <updated>2017-02-20T14:22:13.942Z</updated>
    
    <content type="html"><![CDATA[<p>经常对vertical-align这个属性的使用场合分不清，今天做个梳理，也方便以后回顾。</p>
<a id="more"></a>
<h1 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h1><p>所以浏览器都支持这个属性，只不过对于任何版本的ie来说，它不支持vertical-align的inherit值，意思就是它不会从父元素继承vertical-align属性的值，当然，这只是针对于ie来说。简单来说，ie相对于其他浏览器来说，它的vertical-align值少一个。</p>
<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>表示的是<em>行内</em>元素的垂直对齐方式。</p>
<blockquote>
<p>千万要注意，这个属性只针对行内元素来说,比如input,img。对于块状元素不起作用的，比如p。所以父级元素下至少有两个行内元素，对齐时才会涉及到这个属性。</p>
</blockquote>
<p>但是，这块就有个特别的地方，tr和td可以拥有这个属性，对于它两，vertical-align是成立的</p>
<blockquote>
<p>这个时候不管td下的元素是行内元素还是块级元素，都支持vertical-align属性</p>
</blockquote>
<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>默认值是 baseline</p>
<blockquote>
<p>表示你如果没对元素设置vertical-align属性的话，它的默认对齐方式就是以基线为准对齐，这块要注意基线不是bottom，可以类比拼音四线，比如第三条线为baseline，第四条线是bottom。</p>
</blockquote>
<p>继承性 无</p>
<blockquote>
<p>即，如果设置了父级元素的vertical-align: top，这个只针对父级元素起作用，子元素没继承这个属性，即子元素的vertical-align不是top,子元素的对齐方式还是baseline。</p>
</blockquote>
<p>js语法</p>
<pre><code>object.style.verticalAlign=&quot;bottom&quot;;
</code></pre><blockquote>
<p>注意大写以及没有连接符，是在style里面的</p>
</blockquote>
<h1 id="可能的值"><a href="#可能的值" class="headerlink" title="可能的值"></a>可能的值</h1><blockquote>
<p>有的是以父元素的font-size做为参照，有的是以父元素下子元素的top,bottom做为参照</p>
</blockquote>
<ul>
<li>baseline</li>
<li>sub</li>
<li>super</li>
<li>top</li>
</ul>
<blockquote>
<p>这是什么意思呢，它表示以行内最高的那个元素的顶部为准对齐</p>
</blockquote>
<pre><code>&lt;p&gt;
&lt;span style=&quot;font-size:60px,line-height:60px&quot;&gt;这是一幅&lt;/span&gt;&lt;img class=&quot;top&quot; src=&quot;/i/eg_cute.gif&quot; /&gt;位于段落中的图像。
&lt;/p&gt; 
//只设置font-size的话，它的半间距是不等于零的，需要再设置一下行高
</code></pre><p>那么图片就会和span元素的顶部对齐，因为默认是baseline对齐，所以呢span外的文字就会和span内的文字以基线对齐</p>
<ul>
<li>text-top</li>
</ul>
<blockquote>
<p>意思是将该元素与父元素下的文字以顶部对齐，这下是由父元素的font-size决定的，下次再学习的话，改一下p元素的font-size就都明白了。</p>
</blockquote>
<pre><code>&lt;p&gt;
&lt;span style=&quot;font-size:60px,line-height:60px&quot;&gt;这是一幅&lt;/span&gt;&lt;img class=&quot;top&quot; src=&quot;/i/eg_cute.gif&quot; /&gt;位于段落中的图像。
&lt;/p&gt; 
</code></pre><p>图片和“位于段落中的图像”的顶部对齐</p>
<ul>
<li>middle</li>
</ul>
<blockquote>
<p>这个比较绕，它是将图片（该行内元素）的中部和父元素的font-size的中部对齐</p>
</blockquote>
<ul>
<li>bottom</li>
</ul>
<blockquote>
<p>同top</p>
</blockquote>
<ul>
<li>text-bottom</li>
</ul>
<blockquote>
<p>同text-top</p>
</blockquote>
<ul>
<li>length</li>
</ul>
<blockquote>
<p>像素值，以px计，可以为负值，会向下偏移某个值，以baseline为基准</p>
</blockquote>
<ul>
<li>%</li>
</ul>
<p>基准为line-height </p>
<ul>
<li>inherit</li>
</ul>
<blockquote>
<p>规定应该从父元素继承 vertical-align 属性的值。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常对vertical-align这个属性的使用场合分不清，今天做个梳理，也方便以后回顾。&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>学习网站</title>
    <link href="http://yoursite.com/2017/02/16/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2017/02/16/学习网站/</id>
    <published>2017-02-16T12:01:29.000Z</published>
    <updated>2017-02-16T12:04:27.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习网站"><a href="#学习网站" class="headerlink" title="学习网站"></a>学习网站</h1><a id="more"></a>
<p><a href="http://www.jianshu.com/p/f74c137c5108" target="_blank" rel="external">Web 开发者必上的 10 个网站</a></p>
<p><a href="https://www.zhihu.com/question/46939006" target="_blank" rel="external">国内有什么好的前端学习网站推荐？</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;学习网站&quot;&gt;&lt;a href=&quot;#学习网站&quot; class=&quot;headerlink&quot; title=&quot;学习网站&quot;&gt;&lt;/a&gt;学习网站&lt;/h1&gt;
    
    </summary>
    
      <category term="学习网站" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="http://yoursite.com/2017/02/16/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/02/16/Markdown语法/</id>
    <published>2017-02-16T11:50:52.000Z</published>
    <updated>2017-02-16T11:59:25.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h1><a id="more"></a>
<h1 id="参考网站："><a href="#参考网站：" class="headerlink" title="参考网站："></a>参考网站：</h1><p><a href="http://www.jianshu.com/p/815788f4b01d" target="_blank" rel="external">Markdown基础语法整理</a></p>
<p><a href="http://www.jianshu.com/p/0b257de21eb5" target="_blank" rel="external">Markdown进阶语法整理</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;参考资源&quot;&gt;&lt;a href=&quot;#参考资源&quot; class=&quot;headerlink&quot; title=&quot;参考资源&quot;&gt;&lt;/a&gt;参考资源&lt;/h1&gt;
    
    </summary>
    
      <category term="Markdown" scheme="http://yoursite.com/categories/Markdown/"/>
    
    
  </entry>
  
  <entry>
    <title>select的样式</title>
    <link href="http://yoursite.com/2017/02/03/select%E7%9A%84%E6%A0%B7%E5%BC%8F/"/>
    <id>http://yoursite.com/2017/02/03/select的样式/</id>
    <published>2017-02-03T14:39:11.000Z</published>
    <updated>2017-02-03T14:39:49.210Z</updated>
    
    <content type="html"><![CDATA[<p>设置下拉菜单的字体样式<br><a id="more"></a></p>
<blockquote>
<p>下拉菜单的字体样式只能设置在select中,设置在option中不起作用。</p>
</blockquote>
<pre><code>&lt;div class=&quot;table-1-l&quot;&gt;
    &lt;span&gt;查询项&lt;/span&gt;
        &lt;select name=&quot;&quot; id=&quot;&quot;&gt;
            &lt;option value=&quot;第一项&quot;&gt;第一项&lt;/option&gt;
            &lt;option value=&quot;第二项&quot;&gt;第二项&lt;/option&gt;
            &lt;option value=&quot;第三项&quot;&gt;第三项&lt;/option&gt;
        &lt;/select&gt;
&lt;/div&gt;   

.right-content .table-1-l select {
    width: 70px;
    height: 24px;
    background-color: #fff;
    border: 2px solid #eee;
    /*下面的才有用*/
    font-size: 12px;
    font-family: 黑体;
    color: #333; 
    line-height: 24px;
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设置下拉菜单的字体样式&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>css伪类(Pseudo-classes)</title>
    <link href="http://yoursite.com/2017/02/03/css%E4%BC%AA%E7%B1%BB-Pseudo-classes/"/>
    <id>http://yoursite.com/2017/02/03/css伪类-Pseudo-classes/</id>
    <published>2017-02-03T14:28:43.000Z</published>
    <updated>2017-02-03T14:29:59.780Z</updated>
    
    <content type="html"><![CDATA[<p>CSS 伪类用于向某些选择器添加特殊的效果<br><a id="more"></a></p>
<ul>
<li><p>语法</p>
<p>  selector : pseudo-class {property: value}</p>
</li>
</ul>
<p>CSS 类也可与伪类搭配使用。</p>
<pre><code>selector.class : pseudo-class {property: value}
</code></pre><ul>
<li>分类</li>
</ul>
<p>按照css版本的定义，我们可以先对伪类做如下分类</p>
<p>css1中：</p>
<blockquote>
<ul>
<li>:active     向被激活的元素添加样式。</li>
<li>:hover     当鼠标悬浮在元素上方时，向元素添加样式。</li>
<li>:link     向未被访问的链接添加样式。</li>
<li>:visited     向已被访问的链接添加样式。</li>
</ul>
</blockquote>
<p>例如：</p>
<pre><code>a:link {color: #FF0000}        /* 未访问的链接 */
a:visited {color: #00FF00}    /* 已访问的链接 */
a:hover {color: #FF00FF}    /* 鼠标移动到链接上 */
a:active {color: #0000FF}    /* 选定的链接 */
</code></pre><p>除此之外，伪类还可以和css类配合使用</p>
<pre><code>a.red : visited {color: #FF0000}

&lt;a class=&quot;red&quot; href=&quot;css_syntax.asp&quot;&gt;CSS Syntax&lt;/a&gt;
</code></pre><p>假如上面的例子中的链接被访问过，那么它将显示为红色。</p>
<p>css2中：</p>
<blockquote>
<ul>
<li>:first-child     向元素的第一个子元素添加样式。</li>
<li>:lang     向带有指定 lang 属性的元素添加样式。</li>
<li>:focus     向拥有键盘输入焦点的元素添加样式。</li>
</ul>
</blockquote>
<p>例如：</p>
<pre><code>p:first-child {font-weight: bold;}
li:first-child {text-transform:uppercase;}
</code></pre><p>上面的例子说明，某个元素下，p作为第一个元素，它的font-weight: bold；某个元素下，li作为第一个元素，它的text-transform:uppercase;</p>
<blockquote>
<p>提示：最常见的错误是认为 p:first-child 之类的选择器会选择 p 元素的第一个子元素。</p>
</blockquote>
<p>p:first-child，意思是p作为某个元素下的第一个元素。</p>
<pre><code>input:focus
  {
  color:yellow;
  }
</code></pre><p>表示获得焦点的输入字段的颜色为yellow.<br>也可以与css伪类搭配使用</p>
<pre><code>a.red:visited {color: #FF0000;}

&lt;a class=&quot;red&quot; href=&quot;css_syntax.asp&quot;&gt;CSS Syntax&lt;/a&gt;
</code></pre><p>如果上面这个例子中的链接已被访问过，那么它会显示为红色。</p>
<ul>
<li>总结<br>到现在了解的伪类有7种，总结起来，伪类的作用就是给元素添加样式，让网页更生动。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CSS 伪类用于向某些选择器添加特殊的效果&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>内层div的margin-top不起作用</title>
    <link href="http://yoursite.com/2017/02/03/%E5%86%85%E5%B1%82div%E7%9A%84margin-top%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8/"/>
    <id>http://yoursite.com/2017/02/03/内层div的margin-top不起作用/</id>
    <published>2017-02-03T14:28:11.000Z</published>
    <updated>2017-02-03T14:31:42.877Z</updated>
    
    <content type="html"><![CDATA[<p>做练习时，碰到下面的问题<br><a id="more"></a><br>代码如下：</p>
<pre><code>&lt;div class=&quot;header&quot;&gt;
        &lt;div class=&quot;header-logo&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

.header-logo {
    margin-top: 20px;
}
</code></pre><p>给header-logo设置了margin-top: 20px,理想的情况应该是header的上边缘和header-logo的上边缘之间会间隔20px。在ie中正常，但ff中却不是这样。</p>
<p>在ff中，header-logo的margin-top发现不起作用，最后呈现的是header和header-logo的上边缘紧贴，header的margin-top值是20px，</p>
<p>查询资料，得到如下解释：</p>
<blockquote>
<p>当两个容器嵌套时,如果外层容器和内层容器之间没有别的元素,firefox会把内层元素的margin-top作用与父元素。</p>
</blockquote>
<p>也就是说因为子层是父层的第一个非空子元素，所以使用margin-top会发生这个错误。</p>
<p>如果在header和header-logo中插入p:</p>
<pre><code>&lt;div class=&quot;header&quot;&gt;
        &lt;p&gt;世界&lt;/p&gt;
        &lt;div class=&quot;header-logo&quot;&gt;&lt;/div&gt;
&lt;/div&gt;
.header-logo {
    margin-top: 20px;
}
</code></pre><p>这样的话，header-logo中的margin-top就会正常起作用。<br>那么，怎么在ff中解决最初的问题呢，即两个div想嵌套，子div的margin-top发挥出我们想要的作用？</p>
<p>解决的办法有两个：</p>
<p>1、使用浮动来解决，即将子层代码改为：</p>
<pre><code>.header-logo {
    margin-top: 20px;
    float: left;
}
</code></pre><p>2、使用padding-top来解决，即：</p>
<pre><code>.header {
    padding-top: 20px;
}
</code></pre><p>参考</p>
<p><a href="http://www.cnblogs.com/huangyong8585/archive/2013/05/21/3090779.html" target="_blank" rel="external">关于内层DIV设置margin-top不起作用的解决方案</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做练习时，碰到下面的问题&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>用css敲出三角形</title>
    <link href="http://yoursite.com/2017/02/03/%E7%94%A8css%E6%95%B2%E5%87%BA%E4%B8%89%E8%A7%92%E5%BD%A2/"/>
    <id>http://yoursite.com/2017/02/03/用css敲出三角形/</id>
    <published>2017-02-03T14:27:48.000Z</published>
    <updated>2017-02-03T14:33:21.041Z</updated>
    
    <content type="html"><![CDATA[<p>例子如下：<br><a id="more"></a><br>    <div class="trangle"></div></p>
<pre><code>.trangle{
    width: 0;
    height: 0;
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 8px solid #aaa;
    }
</code></pre><p>设置width,height为0后，用border获得三角形。</p>
<p>上述例子中。border-left，border-right的颜色都为透明，只有border-top的颜色可见，所以最终结果，三角形的样子是下拉型的。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;例子如下：&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>各浏览器指代</title>
    <link href="http://yoursite.com/2017/02/03/%E5%90%84%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8C%87%E4%BB%A3/"/>
    <id>http://yoursite.com/2017/02/03/各浏览器指代/</id>
    <published>2017-02-03T14:27:06.000Z</published>
    <updated>2017-02-03T14:34:43.878Z</updated>
    
    <content type="html"><![CDATA[<p>经常会看到如下代码<br><a id="more"></a><br>    -moz-box-sizing:border-box;<br>    -ms-box-sizing:border-box;<br>    -webkit-box-sizing:border-box; </p>
<p>那么，在css3中前面的-moz 、-ms、-webkit所代表的意思是什么呢？</p>
<ul>
<li>-moz代表firefox浏览器私有属性</li>
<li>-ms代表IE浏览器私有属性</li>
<li>-webkit代表chrome、safari私有属性</li>
<li>-o- 代表opera浏览器私有属性</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经常会看到如下代码&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>去除select下拉菜单的按钮</title>
    <link href="http://yoursite.com/2017/02/03/%E5%8E%BB%E9%99%A4select%E4%B8%8B%E6%8B%89%E8%8F%9C%E5%8D%95%E7%9A%84%E6%8C%89%E9%92%AE/"/>
    <id>http://yoursite.com/2017/02/03/去除select下拉菜单的按钮/</id>
    <published>2017-02-03T14:23:31.000Z</published>
    <updated>2017-02-03T14:24:31.293Z</updated>
    
    <content type="html"><![CDATA[<p>去除select下拉菜单的按钮，要用到css3的appearance属性。<br><a id="more"></a></p>
<ul>
<li>浏览器支持</li>
</ul>
<p>所有主流浏览器都不支持 appearance 属性。</p>
<p> Firefox 支持替代的 -moz-appearance 属性。</p>
<p> Safari 和 Chrome 支持替代的 -webkit-appearance 属性。</p>
<p>要去掉select默认的下拉丑按钮，应给select设置：</p>
<pre><code>select{
    ...
    appearance:none; /*去除浏览器默认样式*/
    -moz-appearance:none; /* Firefox */
    -webkit-appearance:none; /* Safari 和 Chrome */
}
</code></pre><p>参考</p>
<p><a href="http://www.w3school.com.cn/cssref/pr_appearance.asp" target="_blank" rel="external">CSS3 appearance 属性</a></p>
<p><a href="http://blog.csdn.net/u012518659/article/details/49913999" target="_blank" rel="external"> CSS：关于“-webkit-appearance: none”样式使用问题 </a></p>
<p><a href="http://www.w3cplus.com/css3/changing-appearance-of-element-with-css3.html" target="_blank" rel="external">使用CSS3的appearance属性改变元素的外观 </a></p>
<p><a href="http://blog.csdn.net/ft6302244/article/details/44239565" target="_blank" rel="external"> 怎么去掉select边框和小三角,appearance用法 </a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;去除select下拉菜单的按钮，要用到css3的appearance属性。&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>div的width和height</title>
    <link href="http://yoursite.com/2017/02/03/div%E7%9A%84width%E5%92%8Cheight/"/>
    <id>http://yoursite.com/2017/02/03/div的width和height/</id>
    <published>2017-02-03T14:14:50.000Z</published>
    <updated>2017-02-03T14:21:17.004Z</updated>
    
    <content type="html"><![CDATA[<p>讨论margin，padding，border对div最终显示的width和height的影响。<br><a id="more"></a><br>如设置了内容尺寸为：</p>
<pre><code>.box {
    width: 100px;
    height: 100px;
}
</code></pre><p>当添加如下</p>
<pre><code>.box {
    width: 100px;
    height: 100px;
    margin: 10px;
    /*padding: 10px;*/
    /*border: 2px solid;*/
}
</code></pre><p>此时。box的表现尺寸会发生变化，例如，margin：10px 后，box的表现尺寸会变为 width: 120px; height: 120px;</p>
<p>为了让原来box的尺寸不变化，此时，应做如下修改</p>
<pre><code>.box {
    width: 80px;
    height: 80px;
    margin: 10px;
}
</code></pre><p>如此，box最终显示的width和height都是100px。</p>
<p>padding和border同理。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;讨论margin，padding，border对div最终显示的width和height的影响。&lt;br&gt;
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>第一阶段任务</title>
    <link href="http://yoursite.com/2017/01/19/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%E4%BB%BB%E5%8A%A1/"/>
    <id>http://yoursite.com/2017/01/19/第一阶段任务/</id>
    <published>2017-01-19T15:44:18.000Z</published>
    <updated>2017-01-19T15:49:32.789Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>2016 百度前端学院<h1 id="task-1"><a href="#task-1" class="headerlink" title="task_1"></a>task_1</h1><a id="more"></a></li>
</ul>
<ul>
<li>如何将header中h1与ul布局到一行<blockquote>
<p>给ul添加 margin-top ，且值为负值</p>
</blockquote>
</li>
<li>如何将 ul 中的 li 改为横向排列<blockquote>
<p>给li添加 float:left<br>text-indent<br>表示文本首行缩进，好比word中的首行缩进</p>
<p>例如：希望一段文字第一行缩进2个汉字，这&gt;段文本字体大小为12px,<br>放到</p><p>此处是你的文本</p>定义如下<p></p>
<p>p{text-indent:25px;}</p>
</blockquote>
</li>
<li><p>box-shadow</p>
<p>  box-shadow: 2px 3px 4px #ccc;<br>&gt;</p>
<blockquote>
<p>2px: 阴影向右偏移量</p>
<p>3px: 阴影向下偏移量</p>
<p>4px: 阴影的过度距离</p>
<p>#ccc: 阴影的颜色</p>
</blockquote>
</li>
<li><p>不要li的默认style</p>
<p>  li{list-style:none}</p>
</li>
<li><p>图片设置居中</p>
<p>  img {<br>  display: block;<br>  margin: auto;   }</p>
</li>
<li><p>table只显示一条边框</p>
<p>  table,td {</p>
<pre><code>border: 1px solid #ccc;
**border-collapse:collapse;** /*两边框合为一条*/
}
</code></pre></li>
<li><p>文本框向下延伸</p>
<blockquote>
<div class="des"><br><label>个人描述：</label><br><textarea name="MSN"></textarea><br></div>

</blockquote>
<p>  .des label {</p>
<pre><code>**float:left;**
}
</code></pre><p>  .des textarea{</p>
<pre><code>width:500px;
height:100px;
**overflow:visible;**
}
</code></pre></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;2016 百度前端学院&lt;h1 id=&quot;task-1&quot;&gt;&lt;a href=&quot;#task-1&quot; class=&quot;headerlink&quot; title=&quot;task_1&quot;&gt;&lt;/a&gt;task_1&lt;/h1&gt;
    
    </summary>
    
      <category term="2016百度前端学院" scheme="http://yoursite.com/categories/2016%E7%99%BE%E5%BA%A6%E5%89%8D%E7%AB%AF%E5%AD%A6%E9%99%A2/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>用hexo搭建个人博客</title>
    <link href="http://yoursite.com/2017/01/18/%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/01/18/用hexo搭建个人博客/</id>
    <published>2017-01-18T10:43:25.000Z</published>
    <updated>2017-02-16T11:41:04.144Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文有三部分：</p>
<ul>
<li>小想法</li>
<li>正题</li>
<li>踩过的坑</li>
<li>参考资源 </li>
</ul>
</blockquote>
<a id="more"></a>
<h1 id="小想法"><a href="#小想法" class="headerlink" title="小想法"></a>小想法</h1><blockquote>
<p>一开始，看到<a href="https://wanghan0.github.io/" target="_blank" rel="external">Higanbana</a>的博客的页面很简洁，风格很赞，出于好奇，也就动手搭建了属于自己的博客。</p>
<p>在搭建过程中，踩得大坑小坑很多，作为一个技术小白，不停地查找解决问题。新浪博客，简书等，都可以很方便的写东西，我就在纳闷，为什么要搭建自己的博客？</p>
<p>想了半天，终于有了理由。你想，搭建好以后，就差不多有了属于自己的一亩三分地，并且主题风格可以自己换，还没广告。。这样多好。也就这样支撑着自己不停地通过百度，问大佬等等解决各种问题，终于搞定了。</p>
</blockquote>
<p>先看首页:</p>
<p><img src="http://i1.piimg.com/583802/5f5e6f2f47f48397.png" alt="home"></p>
<hr>
<h1 id="正题"><a href="#正题" class="headerlink" title="正题"></a>正题</h1><ul>
<li>准备工作</li>
</ul>
<blockquote>
<p>下载一个代码编辑器(拒绝记事本。。)，例如<a href="http://www.sublimetext.com/" target="_blank" rel="external">sublime</a>。</p>
<p>下载一个markdown写作工具，我用的是<a href="http://note.youdao.com/" target="_blank" rel="external">有道云笔记</a>。</p>
<p>耐心+耐心</p>
</blockquote>
<ul>
<li>Hexo平台</li>
</ul>
<blockquote>
<p>博客平台很多，如FarBox,ghost，Hexo等等，我选择了Hexo平台搭建。</p>
<p>Hexo平台是用 Node.js 搭建的博客平台，速度快，免费，可以搭建在 Github 上。</p>
</blockquote>
<p><strong>主要有以下步骤：</strong></p>
<blockquote>
<ul>
<li>搭建环境准备(node.js和git)</li>
<li>hexo安装和配置</li>
<li>连接hexo与GitHub page</li>
<li>到换主题了</li>
<li>发表文章</li>
<li>细节处理</li>
</ul>
</blockquote>
<h2 id="搭建环境准备-node-js和git"><a href="#搭建环境准备-node-js和git" class="headerlink" title="搭建环境准备(node.js和git)"></a>搭建环境准备(node.js和git)</h2><blockquote>
<p>大概可以分为以下三步:</p>
<ul>
<li>Node.js 的安装</li>
<li>Git 的安装</li>
<li>gitHub 账户的配置</li>
</ul>
</blockquote>
<h3 id="Node-js-的安装"><a href="#Node-js-的安装" class="headerlink" title="Node.js 的安装"></a>Node.js 的安装</h3><blockquote>
<p>进入 <a href="https://nodejs.org/en/download/" target="_blank" rel="external">Node.js官网</a> ，根据你的windows版本下载。你的windows版本是64位的话，点击.msi格式 的64-bit下载，32位的同理。</p>
<p>下载完成后，建议新建一个文件夹，把node.js和接下来的git全放进去。点击安装，一路next，全为默认值，不用管。</p>
</blockquote>
<h3 id="Git-的安装"><a href="#Git-的安装" class="headerlink" title="Git 的安装"></a>Git 的安装</h3><blockquote>
<p>进入 <a href="https://git-scm.com/" target="_blank" rel="external">Git官网</a> ，点到 <a href="https://git-scm.com/download/win" target="_blank" rel="external">下载页面</a> ，点击下载 Git-2.6.3-64-bit.exe</p>
<p>下载完成后，进入Git的安装过程。为了接下来的命令输入方便，需要更改默认参数，憋慌，按照下面的页面的更改进行安装：</p>
</blockquote>
<p><img src="http://p1.bqimg.com/583802/ca751c97db9e7489.jpg" alt="git1"></p>
<p><img src="http://p1.bqimg.com/583802/8fa9713ac7dc1b51.jpg" alt="git2"></p>
<p><img src="http://p1.bqimg.com/583802/75a9fd8c50527420.jpg" alt="git3"></p>
<ul>
<li>为什么要这么改呢？</li>
</ul>
<blockquote>
<p>这样改了以后，接下来对Git进行操作的时候，只需要在cmd页面(同时按住win+R弹出一个页面，再点回车，此时出来的页面就是cmd页面)，接着输入命令就ok了。</p>
<ul>
<li><em>注意：接下来所有命令的输入都在cmd页面</em></li>
</ul>
</blockquote>
<h3 id="gitHub账户的配置"><a href="#gitHub账户的配置" class="headerlink" title="gitHub账户的配置"></a>gitHub账户的配置</h3><blockquote>
<p>首先注册一个github账户<br>进入 <a href="https://github.com/" target="_blank" rel="external">GitHub官网</a>，按照所指示流程注册。</p>
<p>刚注册了一个giuhub账户，确认注册成功后，登陆，按照下面步骤操作：</p>
<p>创建代码库</p>
<p><img src="http://p1.bqimg.com/583802/d38c95bcbd45c7d6.jpg" alt="code1"></p>
<p>新建代码库</p>
<p>里面的repository name中，yourname是你的github的名称，填写后，其他的内容不需要更改，点创建，这样代码库就创建完成。<br><img src="http://p1.bqimg.com/583802/ac7edc8cbfcf5a61.jpg" alt="code2"></p>
</blockquote>
<h2 id="hexo安装和配置"><a href="#hexo安装和配置" class="headerlink" title="hexo安装和配置"></a>hexo安装和配置</h2><p>步骤：</p>
<blockquote>
<ul>
<li>hexo安装</li>
<li>hexo配置</li>
</ul>
</blockquote>
<ul>
<li>hexo 安装</li>
</ul>
<blockquote>
<p>创建一个hexo文件夹，位置随意，我在E盘创建的，下面以E盘下为例：</p>
<p>输入命令：</p>
<pre><code>E:
cd hexo
</code></pre><p>这样就定位到E/hexo了</p>
<p>再输入：</p>
<pre><code>npm install hexo-cli -g
</code></pre><p>然后输入</p>
<pre><code>npm install hexo --save
</code></pre></blockquote>
<ul>
<li>hexo 配置</li>
</ul>
<blockquote>
<p>接下来输入：</p>
<pre><code>hexo init
</code></pre><p>再输入：</p>
<pre><code>npm install
npm install hexo-generator-index --save        #索引生成器
npm install hexo-generator-archive --save       #归档生成器
install hexo-generator-category --save     #分类生成器
npm install hexo-generator-tag --save             #标签生成器
npm install hexo-server --save                        #本地服务
npm install hexo-deployer-git --save             #hexo通过git发布（必装）
npm install hexo-renderer-marked@0.2.7--save   #渲染器
npm install hexo-renderer-stylus@0.3.0 --save     #渲染器   
</code></pre><p>再输入：</p>
<pre><code>hexo g
hexo s
</code></pre><p>此时，页面中会有：</p>
<pre><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.
</code></pre><p>在浏览器中输入<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，看到页面如图，说明hexo配置成功。</p>
</blockquote>
<p><img src="http://p1.bpimg.com/583802/2981fb6634f94c79.jpg" alt="ok1"></p>
<hr>
<h2 id="连接hexo与GitHub-page"><a href="#连接hexo与GitHub-page" class="headerlink" title="连接hexo与GitHub page"></a>连接hexo与GitHub page</h2><p>步骤：</p>
<blockquote>
<ul>
<li>配置git个人信息</li>
<li>配置Deployment</li>
</ul>
</blockquote>
<ul>
<li>配置Git个人信息</li>
</ul>
<blockquote>
<p>输入命令：</p>
<pre><code>git config --global user.name &quot;yourname&quot;
git config --global user.email &quot;youremail&quot;
</code></pre><p>yourname和youremail填写的是你的github账户的名称和邮箱。比如我的是：chijiangbo和1793335971@qq.com。</p>
<p>生成密钥</p>
<p>输入命令：</p>
<pre><code>ssh-keygen -t rsa -C &quot;youremail&quot;
</code></pre><p>（youremail填写方法同上）</p>
<p>按三个回车，得到两个文件 id_rsa 和 id_rsa.pub，这两个文件中的位置图中有显示。</p>
<p>用记事本或者其他打开 id_rsa.pub 文件，复制里面的内容。</p>
<p>进入你的github，进到setting，找到ssh and gpg key，点击 new ssh key,把刚才的东西粘贴到SSH Keys下面的key处，Title自己命名。</p>
<p>输入命令：</p>
</blockquote>
<pre><code>ssh git@github.com
</code></pre><blockquote>
<p>刷新页面，页面上的小钥匙变成绿色。</p>
</blockquote>
<ul>
<li>配置Deployment</li>
</ul>
<blockquote>
<p>打开hexo目录下的_config.yml文件，找到Deployment，然后按照如下修改：</p>
</blockquote>
<pre><code>deploy:
    type: git
    repo: git@github.com:yourname/yourname.github.io.git
    branch: master
</code></pre><blockquote>
<p>(yourname的填写方法同上)</p>
</blockquote>
<hr>
<h2 id="到换主题了"><a href="#到换主题了" class="headerlink" title="到换主题了"></a>到换主题了</h2><p>步骤：</p>
<blockquote>
<ul>
<li>下载主题</li>
<li>更换主题</li>
</ul>
</blockquote>
<ul>
<li>下载主题</li>
</ul>
<blockquote>
<p>我用的<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next</a>主题，详情移步官网，想换成其他主题的方法类似，操作方法如下：</p>
<p>先定位到hexo目录下，前面以提到如何定位到hexo目录下。</p>
<p>输入命令：</p>
</blockquote>
<pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next
</code></pre><blockquote>
<p>等着吧。。等next主题下载完成。</p>
</blockquote>
<ul>
<li>更换主题</li>
</ul>
<blockquote>
<p>下载完成后，打开hexo目录下的_config.yml，往下拉，找到</p>
</blockquote>
<pre><code>theme: landscape
</code></pre><blockquote>
<p>(默认的主题就是landscape..)修改lanscape为next，别忘了冒号后面有个空格！！！</p>
<p>修改完之后，输入命令：</p>
</blockquote>
<pre><code>hexo clean
hexo g
hexo d
</code></pre><blockquote>
<p>进去<a href="https://yourname.github.io/,发现主题更改成功。" target="_blank" rel="external">https://yourname.github.io/,发现主题更改成功。</a></p>
<p>(yourname更改方法同上)</p>
</blockquote>
<hr>
<h2 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h2><p>步骤：</p>
<blockquote>
<ul>
<li>新建md文件</li>
<li>编辑</li>
<li>发布</li>
<li>新建md文件</li>
</ul>
<p>输入命令：</p>
</blockquote>
<pre><code>hexo new post &quot;文章名称&quot;
</code></pre><blockquote>
<p>运行完成后，点开E/hexo/source/_posts,发现会存在一个md文件，即  文章名称.md</p>
</blockquote>
<ul>
<li>编辑</li>
</ul>
<blockquote>
<p>用markdown编辑器(我的是有道云笔记)打开它，进行编辑，然后保存。</p>
</blockquote>
<ul>
<li>发布</li>
</ul>
<p>输入命令：</p>
<pre><code>hexo g
hexo d
</code></pre><blockquote>
<p>这两行命令其实可以等效成 </p>
</blockquote>
<pre><code>hexo d -g
</code></pre><blockquote>
<p>刷新你的博客页面，比如我的<a href="https://chijiangbo.github.io/" target="_blank" rel="external">http://chijiangbo.github.io</a>，就能看到文章。</p>
</blockquote>
<h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><blockquote>
<ol>
<li><p>主题更改好之后，无法成功显示，纠结了半天，没解决问题，我只好默默地重新搭建一遍。。</p>
</li>
<li><p>md文件编辑完之后，博客首页只显示标题，没有显示内容，很是头疼。又把各个环节检查了n遍，都没有问题，可偏偏就是不显示内容，我能怎么办，我也很绝望呐。。想把有道云笔记换成markdownpad去重新编辑文件，无奈，win10不接受他。。快要放弃的时候，我发现md文件每次编辑完之后重新打开，怎么内容都没了，很奇怪，思前想后，觉得自己好菜，用有道云笔记编辑完之后，人家是保存在“云”上面的，本地的md文件根本没有被编辑。就这样，我把用有道云笔记编辑的文件保存到E/hexo/sourses/_post下面，删去已经存在的那个同名的md文件，然后再</p>
</li>
</ol>
<blockquote>
<p>hexo g</p>
<p>hexo d</p>
</blockquote>
<p>  就这样，困扰了一天的难题终于解决了。那感觉，比拿了五杀还赞。</p>
</blockquote>
<h1 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h1><ol>
<li><a href="https://wanghan0.github.io/" target="_blank" rel="external">Higanbana</a></li>
<li><a href="https://xdlrt.github.io/page/6/" target="_blank" rel="external">自留地</a></li>
<li><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external"> 手把手教你用Hexo+Github 搭建属于自己的博客</a></li>
<li><a href="http://www.jianshu.com/p/815788f4b01d" target="_blank" rel="external">Markdown基础语法整理</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/issues" target="_blank" rel="external"><br>iissnan/hexo-theme-next
</a></li>
<li><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">Next</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next/issues/1290" target="_blank" rel="external">已经更新到5.10正式版了么？</a></li>
<li></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文有三部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小想法&lt;/li&gt;
&lt;li&gt;正题&lt;/li&gt;
&lt;li&gt;踩过的坑&lt;/li&gt;
&lt;li&gt;参考资源 &lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="博客" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
</feed>
